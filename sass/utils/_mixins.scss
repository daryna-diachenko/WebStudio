@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// @mixin auto-centered {
//   margin-left: auto;
//   margin-right: auto;
// }

@mixin pseudo($content: "", $display: block, $position: absolute) {
  content: $content;
  display: $display;
  position: $position;
}

@mixin abs-position($top, $right, $bottom, $left) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// This mixin uses the @content directive, so you need to add the related CSS rules separately, within the @include rule.
@mixin breakpoint($point) {
  @if $point == large {
    @media only screen and (min-width: 1366px) {
      @content;
    }
  } @else if $point == desktop {
    @media only screen and (min-width: 1024px) {
      @content;
    }
  } @else if $point == tablet {
    @media only screen and (min-width: 600px) {
      @content;
    }
  }
}

$breakpoints:  (
  "xs": 25em, // 400px
  "sm": 34em, // 544px
  "md": 48em, // 768px
  "lg": 60em, // 960px
  "xl": 80em, // 1280px
  "xxl": 90em // 1440px
);
 
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  }
  @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
//

// @mixin font

// @mixin retina-image

